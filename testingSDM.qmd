---
title: "testingSDM"
format: html
editor: visual
---
Setup - change to different file
```{r}
library(tidyverse)
library(yaml)
library(sdmpredictors)
library(raster)
library(robis)
library(stars)
library(dismo)
library(terra)
library(maxnet)

vars <- read_yaml("config.yaml")


#Get species data from Obis.
#Input: latin name of a marine species
#Output: data frame with occurence points.
get_species_data <- function(spec) {
  
    species_data <- robis::occurrence(spec)
    withDates <- species_data %>%
      separate(eventDate, into = c("Year", "Month"), sep = "-") %>%
      filter(!is.na(Year)) %>%
      filter(grepl("^\\d{4}$", as.character(Year)))
    
    filtered_data <- subset(withDates, date_year >= vars$start_year & date_year <= vars$end_year)
    
    bounded_data <- filtered_data %>%
      filter(decimalLatitude >= vars$latmin & decimalLatitude <= vars$latmax &
               decimalLongitude >= vars$lonmin & decimalLongitude <= vars$lonmax) %>% 
      dplyr::select(datasetName, decimalLatitude, decimalLongitude, Year, Month, individualCount, vernacularName)
    
    obs_sf <- bounded_data %>% 
    sf::st_as_sf(
      coords = c("decimalLongitude", "decimalLatitude"),
      crs = st_crs(4326))
    return(obs_sf)
  
}

#Input: variables, output:raster stack
get_enviro_data <- function(envvars) {
  #layercodes <- var
  env <- sdmpredictors::load_layers(envvars, equalarea = FALSE, rasterstack = TRUE)
  #Crop
  env <- st_as_stars(env)
  extent <- st_bbox(c(xmin = vars$lonmin, xmax = vars$lonmax, ymin = vars$latmin, ymax = vars$latmax), crs = st_crs(env))
  rc <- st_crop(x = env, y = extent)
  return(rc)
}


extractEnvData <- function(rasterStack, points) {
  env.stars <- terra::split(rasterStack)
  spec.env <- stars::st_extract(env.stars, sf::st_coordinates(points)) %>%
    dplyr::as_tibble()
  na.omit(spec.env)
  
}

get_background_points <- function(croppedRaster) {
  
    print("task: get background points using stars")
}

```


## Call functions to prep data
```{r}
layers <- c(vars$envVars)
envRasterStack <- get_enviro_data(layers)
speciesPoints <- get_species_data(vars$species[1])
#absPoints <- "hold"
pres <- extractEnvData(envRasterStack, speciesPoints)
#abs <- extractEnvData(envRasterStack, absPoints)

```
## Make model
```{r}

```

## Call functions for future data
```{r}

```

## Predict with model
```{r}

```


